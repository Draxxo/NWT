-- MySQL Script generated by MySQL Workbench
-- Thu Apr 12 09:36:18 2018
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema NWTdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema NWTdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `NWTdb` DEFAULT CHARACTER SET utf8 ;
USE `NWTdb` ;

-- -----------------------------------------------------
-- Table `NWTdb`.`Roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`Roles` (
  `roleId` INT NOT NULL,
  `roleName` VARCHAR(255) NULL,
  PRIMARY KEY (`roleId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`Promotions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`Promotions` (
  `idPromotion` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `promotionName` VARCHAR(255) NULL,
  `promotionIsActive` INT NULL,
  PRIMARY KEY (`idPromotion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`Groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`Groups` (
  `groupId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `groupName` VARCHAR(255) NULL,
  `groupType` TINYINT NOT NULL,
  `idPromotion` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`groupId`),
  INDEX `fk_Groups_Promotions1_idx` (`idPromotion` ASC),
  CONSTRAINT `fk_Groups_Promotions1`
    FOREIGN KEY (`idPromotion`)
    REFERENCES `NWTdb`.`Promotions` (`idPromotion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`Users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`Users` (
  `userId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `userMail` VARCHAR(255) NOT NULL,
  `userPassword` VARCHAR(255) NOT NULL,
  `userFirstName` VARCHAR(255) NULL,
  `userLastName` VARCHAR(255) NULL,
  `userGender` TINYINT NULL,
  `userBirthdate` DATE NULL,
  `userHasAcceptedTerms` TINYINT NULL,
  `userHasConfirmedEmail` TINYINT NULL,
  `userAdress` VARCHAR(255) NULL,
  `userAvatar` VARCHAR(255) NULL,
  `zipCode` INT NULL,
  `userCity` VARCHAR(255) NULL,
  `userSpeciality` TINYINT NULL,
  `groupId` INT NOT NULL,
  `roleId` INT NOT NULL,
  PRIMARY KEY (`userId`),
  UNIQUE INDEX `userMail_UNIQUE` (`userMail` ASC),
  INDEX `fk_Users_Roles1_idx` (`roleId` ASC),
  INDEX `fk_Users_Groups1_idx` (`groupId` ASC),
  CONSTRAINT `fk_Users_Roles1`
    FOREIGN KEY (`roleId`)
    REFERENCES `NWTdb`.`Roles` (`roleId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_Groups1`
    FOREIGN KEY (`groupId`)
    REFERENCES `NWTdb`.`Groups` (`groupId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`Zones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`Zones` (
  `zoneId` INT UNSIGNED NOT NULL,
  `zoneName` VARCHAR(255) NOT NULL,
  `zoneCapacity` INT NULL,
  `zoneHasAccessForDisabled` TINYINT NULL,
  PRIMARY KEY (`zoneId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`Furnitures`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`Furnitures` (
  `furnitureId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `furnitureDenomination` VARCHAR(255) NOT NULL,
  `furnitureQuantity` INT NULL,
  `furnitureStatus` TINYINT UNSIGNED NULL,
  `furnitureReference` VARCHAR(255) NULL,
  `zoneId` INT NULL,
  PRIMARY KEY (`furnitureId`),
  INDEX `fk_Stuffs_Zones1_idx` (`zoneId` ASC),
  CONSTRAINT `fk_Stuffs_Zones1`
    FOREIGN KEY (`zoneId`)
    REFERENCES `NWTdb`.`Zones` (`zoneId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`Tickets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`Tickets` (
  `ticketId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `userId` INT NOT NULL,
  `ticketSubject` VARCHAR(255) NULL,
  `ticketText` MEDIUMTEXT NULL,
  `ticketDate` DATETIME NULL,
  `tucketCloseDate` DATETIME NULL,
  PRIMARY KEY (`ticketId`),
  INDEX `fk_Tickets_Users1_idx` (`userId` ASC),
  CONSTRAINT `fk_Tickets_Users1`
    FOREIGN KEY (`userId`)
    REFERENCES `NWTdb`.`Users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`Teachers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`Teachers` (
  `teacherId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `teacherFirstName` VARCHAR(255) NULL,
  `teacherLastName` VARCHAR(255) NULL,
  PRIMARY KEY (`teacherId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`ZonesReservations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`ZonesReservations` (
  `reservationId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `reservationDate` DATETIME NULL,
  `reservationDuration` TIME NULL,
  `reservationLabel` VARCHAR(255) NULL,
  `reservationStatus` TINYINT NULL,
  `reservationVolume` INT NULL,
  `zoneId` INT UNSIGNED NOT NULL,
  `teacherId` INT NOT NULL,
  PRIMARY KEY (`reservationId`),
  INDEX `fk_ZoneReservations_Classroom1_idx` (`zoneId` ASC),
  INDEX `fk_ClassroomReservations_Teacher1_idx` (`teacherId` ASC),
  CONSTRAINT `fk_ZoneReservations_Classroom1`
    FOREIGN KEY (`zoneId`)
    REFERENCES `NWTdb`.`Zones` (`zoneId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ClassroomReservations_Teacher1`
    FOREIGN KEY (`teacherId`)
    REFERENCES `NWTdb`.`Teachers` (`teacherId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`Equipments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`Equipments` (
  `equipmentId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `equipmentDenimonation` VARCHAR(255) NULL,
  `equipmentStatus` TINYINT NULL,
  `equipementAccess` TINYINT NULL,
  `equipmentReference` VARCHAR(255) NULL,
  PRIMARY KEY (`equipmentId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`EquipementReservations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`EquipementReservations` (
  `reservationId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `reservationDate` DATETIME NULL,
  `reservationDuration` TIME NULL,
  `reservationLabel` VARCHAR(255) NULL,
  `reservationStatus` TINYINT NULL,
  `equipmentId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`reservationId`, `equipmentId`),
  INDEX `fk_EquipementReservations_Equipments1_idx` (`equipmentId` ASC),
  CONSTRAINT `fk_EquipementReservations_Equipments1`
    FOREIGN KEY (`equipmentId`)
    REFERENCES `NWTdb`.`Equipments` (`equipmentId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`Subjects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`Subjects` (
  `subjectId` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `subjectName` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`subjectId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`teacherSubjects`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`teacherSubjects` (
  `Teachers_teacherId` INT UNSIGNED NOT NULL,
  `Subjects_subjectId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`Teachers_teacherId`, `Subjects_subjectId`),
  INDEX `fk_Teachers_has_Subjects_Subjects1_idx` (`Subjects_subjectId` ASC),
  INDEX `fk_Teachers_has_Subjects_Teachers1_idx` (`Teachers_teacherId` ASC),
  CONSTRAINT `fk_Teachers_has_Subjects_Teachers1`
    FOREIGN KEY (`Teachers_teacherId`)
    REFERENCES `NWTdb`.`Teachers` (`teacherId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Teachers_has_Subjects_Subjects1`
    FOREIGN KEY (`Subjects_subjectId`)
    REFERENCES `NWTdb`.`Subjects` (`subjectId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`groupClassroomReservations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`groupClassroomReservations` (
  `groupId` INT UNSIGNED NOT NULL,
  `reservationId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`groupId`, `reservationId`),
  INDEX `fk_Groups_has_ClassroomReservations_ClassroomReservations1_idx` (`reservationId` ASC),
  INDEX `fk_Groups_has_ClassroomReservations_Groups1_idx` (`groupId` ASC),
  CONSTRAINT `fk_Groups_has_ClassroomReservations_Groups1`
    FOREIGN KEY (`groupId`)
    REFERENCES `NWTdb`.`Groups` (`groupId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Groups_has_ClassroomReservations_ClassroomReservations1`
    FOREIGN KEY (`reservationId`)
    REFERENCES `NWTdb`.`ZonesReservations` (`reservationId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NWTdb`.`UserEquipementReservations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NWTdb`.`UserEquipementReservations` (
  `userId` INT UNSIGNED NOT NULL,
  `reservationId` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`userId`, `reservationId`),
  INDEX `fk_Users_has_EquipementReservations_EquipementReservations1_idx` (`reservationId` ASC),
  INDEX `fk_Users_has_EquipementReservations_Users1_idx` (`userId` ASC),
  CONSTRAINT `fk_Users_has_EquipementReservations_Users1`
    FOREIGN KEY (`userId`)
    REFERENCES `NWTdb`.`Users` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Users_has_EquipementReservations_EquipementReservations1`
    FOREIGN KEY (`reservationId`)
    REFERENCES `NWTdb`.`EquipementReservations` (`reservationId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
